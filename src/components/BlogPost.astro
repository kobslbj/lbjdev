---
interface Props {
  url: string;
  title: string;
  description?: string;
  pubDate?: Date | string;
  tags?: string[];
  image?: string;
}
const { url, title, description, pubDate, tags = [], image } = Astro.props;
---
---

<a href={url} aria-label={`前往 ${title}`} class="block group">
  <div class="p-4 mb-4 border border-[#2A2D32] rounded-lg bg-[#0F1419] group-hover:bg-[#1C2128] group-hover:border-[#58A6FF] transition duration-300">
    {image && (
      <div class="mb-3 overflow-hidden rounded-md border border-[#2A2D32]">
        <img src={image} alt={title} class="w-full h-44 object-cover group-hover:opacity-95 transition" loading="lazy" />
      </div>
    )}
    <h2 class="text-xl font-semibold text-[#E6EDF3] group-hover:text-[#79C0FF]">{title}</h2>
    {pubDate && (
      <p class="mt-1 text-sm text-[#8B949E]">
        <time datetime={typeof pubDate === 'string' ? pubDate : pubDate.toISOString()}>
          {new Date(pubDate).toDateString().split(' ').slice(1, 3).join(' ') + ' ' + new Date(pubDate).getFullYear()}
        </time>
      </p>
    )}
    {description && (
      <p class="mt-2 text-[#C9D1D9] line-clamp-3">{description}</p>
    )}
    {tags.length > 0 && (
      <div class="mt-3 flex flex-wrap gap-2">
        {tags.map((tag) => (
          <span class="px-2 py-1 text-xs text-[#58A6FF] border border-[#2A2D32] rounded-md"># {tag}</span>
        ))}
      </div>
    )}
  </div>
</a>
